{"version":3,"sources":["App.js","components/actions/calculatorActions.js","components/actions/type.js","components/reducers/calculatorReducer.js","components/reducers/rootReducer.js","components/store/store.js","index.js"],"names":["App","answer","isNaN","this","props","className","onChange","getNum1","getNum2","onClick","add","subtract","multiply","divide","Component","connect","state","calculatorReducer","num1","num2","type","e","payload","target","value","initialState","combineReducers","action","Number","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAWMA,E,kDACJ,aAAe,wC,qDAKb,IAAMC,EAASC,MAAMC,KAAKC,MAAMH,QAC5B,wBACAE,KAAKC,MAAMH,OACf,OACE,yBAAKI,UAAU,aACb,2BAAOA,UAAU,SAASC,SAAUH,KAAKC,MAAMG,UAC/C,2BAAOF,UAAU,SAASC,SAAUH,KAAKC,MAAMI,UAC/C,yBAAKH,UAAU,UACb,4BAAQA,UAAU,YAAYI,QAASN,KAAKC,MAAMM,KAAlD,OAGA,4BAAQL,UAAU,YAAYI,QAASN,KAAKC,MAAMO,UAAlD,YAGA,4BAAQN,UAAU,YAAYI,QAASN,KAAKC,MAAMQ,UAAlD,YAGA,4BAAQP,UAAU,YAAYI,QAASN,KAAKC,MAAMS,QAAlD,UAGA,4BAAKZ,S,GA1BGa,aAuCHC,eANS,SAACC,GAAD,MAAY,CAClCf,OAAQe,EAAMC,kBAAkBhB,OAChCiB,KAAMF,EAAMC,kBAAkBC,KAC9BC,KAAMH,EAAMC,kBAAkBE,QAGQ,CACtCT,ICnCiB,WACjB,MAAO,CACLU,KClBe,QFoDjBT,SC9BsB,WACtB,MAAO,CACLS,KCvBoB,aFoDtBR,SCnBsB,WACtB,MAAO,CACLQ,KClCoB,aFoDtBP,OC1BoB,WACpB,MAAO,CACLO,KC3BkB,WFoDpBb,QCrDqB,SAACc,GACtB,MAAO,CACLD,KCCoB,WDApBE,QAASD,EAAEE,OAAOC,QDmDpBhB,QC/CqB,SAACa,GACtB,MAAO,CACLD,KCLoB,WDMpBE,QAASD,EAAEE,OAAOC,SDsCPT,CAOZf,G,sBGhDGyB,EAAe,CACnBP,KAAM,EACNC,KAAM,EACNlB,OAAQ,GCTKyB,cAAgB,CAC7BT,kBDWa,WAAyC,IAA/BD,EAA8B,uDAAtBS,EAAcE,EAAQ,uCACrD,OAAQA,EAAOP,MACb,IDZoB,WCalB,OAAO,2BACFJ,GADL,IAEEE,KAAMU,OAAOD,EAAOL,WAExB,IDhBoB,WCiBlB,OAAO,2BACFN,GADL,IAEEG,KAAMS,OAAOD,EAAOL,WAExB,ID3Be,MC4Bb,OAAO,2BACFN,GADL,IAEEf,OAAQe,EAAME,KAAOF,EAAMG,OAE/B,ID/BoB,WCgClB,OAAO,2BACFH,GADL,IAEEf,OAAQe,EAAME,KAAOF,EAAMG,OAE/B,IDlCkB,SCmChB,OAAO,2BACFH,GADL,IAEEf,OAAQe,EAAME,KAAOF,EAAMG,OAE/B,IDxCoB,WCyClB,OAAO,2BACFH,GADL,IAEEf,OAAQe,EAAME,KAAOF,EAAMG,OAG/B,QACE,OAAOH,ME3CPa,EAAa,CAACC,KAEPC,EAAQC,YACnBC,EALmB,GAOnBC,IAAe,WAAf,EAAmBL,ICJrBM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.1f258d20.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  add,\n  subtract,\n  multiply,\n  divide,\n  getNum1,\n  getNum2,\n} from \"./components/actions/calculatorActions\";\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    const answer = isNaN(this.props.answer)\n      ? \"Please enter a number\"\n      : this.props.answer;\n    return (\n      <div className=\"container\">\n        <input className=\"center\" onChange={this.props.getNum1} />\n        <input className=\"center\" onChange={this.props.getNum2} />\n        <div className=\"center\">\n          <button className=\"green btn\" onClick={this.props.add}>\n            ADD\n          </button>\n          <button className=\"green btn\" onClick={this.props.subtract}>\n            SUBTRACT\n          </button>\n          <button className=\"green btn\" onClick={this.props.multiply}>\n            MULTIPLY\n          </button>\n          <button className=\"green btn\" onClick={this.props.divide}>\n            DIVIDE\n          </button>\n          <h1>{answer}</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  answer: state.calculatorReducer.answer,\n  num1: state.calculatorReducer.num1,\n  num2: state.calculatorReducer.num2,\n});\n\nexport default connect(mapStateToProps, {\n  add,\n  subtract,\n  multiply,\n  divide,\n  getNum1,\n  getNum2,\n})(App);\n","import { ADD, DIVIDE, MULTIPLY, SUBTRACT, GET_NUM1, GET_NUM2 } from \"./type\";\r\n\r\nexport const getNum1 = (e) => {\r\n  return {\r\n    type: GET_NUM1,\r\n    payload: e.target.value,\r\n  };\r\n};\r\n\r\nexport const getNum2 = (e) => {\r\n  return {\r\n    type: GET_NUM2,\r\n    payload: e.target.value,\r\n  };\r\n};\r\n\r\nexport const add = () => {\r\n  return {\r\n    type: ADD,\r\n  };\r\n};\r\n\r\nexport const subtract = () => {\r\n  return {\r\n    type: SUBTRACT,\r\n  };\r\n};\r\n\r\nexport const divide = () => {\r\n  return {\r\n    type: DIVIDE,\r\n  };\r\n};\r\n\r\nexport const multiply = () => {\r\n  return {\r\n    type: MULTIPLY,\r\n  };\r\n};\r\n","export const ADD = \"ADD\";\r\nexport const SUBTRACT = \"SUBTRACT\";\r\nexport const MULTIPLY = \"MULTIPLY\";\r\nexport const DIVIDE = \"DIVIDE\";\r\n\r\nexport const GET_NUM1 = \"GET_NUM1\";\r\nexport const GET_NUM2 = \"GET_NUM2\";\r\n","import {\r\n  ADD,\r\n  SUBTRACT,\r\n  DIVIDE,\r\n  MULTIPLY,\r\n  GET_NUM1,\r\n  GET_NUM2,\r\n} from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  num1: 2,\r\n  num2: 2,\r\n  answer: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_NUM1:\r\n      return {\r\n        ...state,\r\n        num1: Number(action.payload),\r\n      };\r\n    case GET_NUM2:\r\n      return {\r\n        ...state,\r\n        num2: Number(action.payload),\r\n      };\r\n    case ADD:\r\n      return {\r\n        ...state,\r\n        answer: state.num1 + state.num2,\r\n      };\r\n    case SUBTRACT:\r\n      return {\r\n        ...state,\r\n        answer: state.num1 - state.num2,\r\n      };\r\n    case DIVIDE:\r\n      return {\r\n        ...state,\r\n        answer: state.num1 / state.num2,\r\n      };\r\n    case MULTIPLY:\r\n      return {\r\n        ...state,\r\n        answer: state.num1 * state.num2,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport calculatorReducer from \"./calculatorReducer\";\r\n\r\nexport default combineReducers({\r\n  calculatorReducer,\r\n});\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport { store } from \"./components/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}